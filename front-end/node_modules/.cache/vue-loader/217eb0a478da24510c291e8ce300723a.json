{"remainingRequest":"/home/andrew/Documents/cs260/labs/portfolio/front-end/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/andrew/Documents/cs260/labs/portfolio/front-end/src/components/Login.vue?vue&type=style&index=0&id=ef68022e&scoped=true&lang=css&","dependencies":[{"path":"/home/andrew/Documents/cs260/labs/portfolio/front-end/src/components/Login.vue","mtime":1624011906912},{"path":"/home/andrew/Documents/cs260/labs/portfolio/front-end/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/andrew/Documents/cs260/labs/portfolio/front-end/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/andrew/Documents/cs260/labs/portfolio/front-end/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/andrew/Documents/cs260/labs/portfolio/front-end/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/andrew/Documents/cs260/labs/portfolio/front-end/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLm15Rm9ybSB7CiAgZGlzcGxheTogZmxleDsKICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDsKfQo="},{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0FA;AACA;AACA;AACA","file":"Login.vue","sourceRoot":"src/components","sourcesContent":["<template>\n<div class=\"hero\">\n  <div class=\"heroBox\">\n    <form class=\"pure-form myForm\">\n      <fieldset class=\"pure-group\">\n        <legend>Login to Access Shop</legend>\n        <input placeholder=\"email\" v-model=\"emailLogin\">\n        <input type=\"password\" placeholder=\"password\" v-model=\"passwordLogin\">\n        <button type=\"submit\" class=\"pure-button pure-button-primary\" @click.prevent=\"login\">Login</button>\n      </fieldset>\n    </form>\n    <p v-if=\"errorLogin\" class=\"error\">{{errorLogin}}</p>\n    <div class=\"myForm\">\n      <form class=\"pure-form\">\n        <fieldset class=\"pure-group\">\n          <legend>Register</legend>\n          <input placeholder=\"first name\" v-model=\"firstName\">\n          <input placeholder=\"last name\" v-model=\"lastName\">\n        </fieldset>\n        <fieldset class=\"pure-group\">\n          <input placeholder=\"email\" v-model=\"email\">\n          <input type=\"password\" placeholder=\"password\" v-model=\"password\">\n        </fieldset>\n        <fieldset>\n          <button type=\"submit\" class=\"pure-button pure-button-primary\" @click.prevent=\"register\">Register</button>\n        </fieldset>\n      </form>\n    </div>\n    <p v-if=\"error\" class=\"error\">{{error}}</p>\n  </div>\n</div>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  name: 'Login',\n  data() {\n    return {\n      firstName: '',\n      lastName: '',\n      email: '',\n      password: '',\n      emailLogin: '',\n      passwordLogin: '',\n      error: '',\n      errorLogin: '',\n    }\n  },\n  methods: {\n    async register() {\n      this.error = \"\";\n      this.errorLogin = \"\";\n      if (!this.firstName || !this.lastName || !this.email || !this.password)\n        return;\n      try {\n        let response = await axios.post(\"/api/users\", {\n          firstName: this.firstName,\n          lastName: this.lastName,\n          email: this.email,\n          password: this.password,\n        });\n        this.$root.$data.user = response.data.user;\n      } catch (error) {\n        this.error = error.response.data.message;\n        this.$root.$data.user = null;\n      }\n    },\n    async login() {\n      this.error = \"\";\n      this.errorLogin = \"\";\n      if (!this.emailLogin || !this.passwordLogin)\n        return;\n      try {\n        let response  = await axios.post(\"/api/users/login\", {\n          email: this.emailLogin,\n          password: this.passwordLogin,\n        });\n        this.$root.$data.user = response.data.user;\n      } catch (error) {\n        this.errorLogin = \"Error: \" + error.response.data.message;\n        this.$root.$data.user = null;\n      }\n    },\n  },\n}\n</script>\n\n<style scoped>\n.myForm {\n  display: flex;\n  justify-content: space-around;\n}\n</style>\n"]}]}